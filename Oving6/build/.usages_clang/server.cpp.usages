22 serialization::archive 18 0 0 0 0 72 /Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6 78 /Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/build 0 0 443 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 5 boost 1 11 1 16 18446744073709551615 1 / 1 16 1 17 18446744073709551615 4 asio 1 17 1 21 18446744073709551615 1 . 1 21 1 22 18446744073709551615 3 hpp 1 22 1 25 18446744073709551615 1 > 1 25 1 26 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 8 iostream 2 11 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 5 using 4 1 4 6 18446744073709551615 9 namespace 4 7 4 16 18446744073709551615 3 std 4 17 4 20 0 1 ; 4 20 4 21 18446744073709551615 5 using 5 1 5 6 18446744073709551615 9 namespace 5 7 5 16 18446744073709551615 5 boost 5 17 5 22 1 2 :: 5 22 5 24 18446744073709551615 4 asio 5 24 5 28 2 2 :: 5 28 5 30 18446744073709551615 2 ip 5 30 5 32 3 1 ; 5 32 5 33 18446744073709551615 5 class 7 1 7 6 18446744073709551615 10 EchoServer 7 7 7 17 4 1 { 7 18 7 19 18446744073709551615 7 private 8 1 8 8 18446744073709551615 1 : 8 8 8 9 18446744073709551615 5 class 9 3 9 8 18446744073709551615 10 Connection 9 9 9 19 5 1 { 9 20 9 21 18446744073709551615 6 public 10 3 10 9 18446744073709551615 1 : 10 9 10 10 18446744073709551615 3 tcp 11 5 11 8 6 2 :: 11 8 11 10 18446744073709551615 6 socket 11 10 11 16 7 6 socket 11 17 11 23 8 1 ; 11 23 11 24 18446744073709551615 10 Connection 12 5 12 15 5 1 ( 12 15 12 16 5 5 boost 12 16 12 21 1 2 :: 12 21 12 23 18446744073709551615 4 asio 12 23 12 27 2 2 :: 12 27 12 29 18446744073709551615 10 io_service 12 29 12 39 9 1 & 12 40 12 41 18446744073709551615 10 io_service 12 41 12 51 10 1 ) 12 51 12 52 5 1 : 12 53 12 54 5 6 socket 12 55 12 61 8 1 ( 12 61 12 62 11 10 io_service 12 62 12 72 10 1 ) 12 72 12 73 11 1 { 12 74 12 75 18446744073709551615 1 } 12 75 12 76 18446744073709551615 1 } 13 3 13 4 18446744073709551615 1 ; 13 4 13 5 18446744073709551615 5 boost 15 3 15 8 1 2 :: 15 8 15 10 18446744073709551615 4 asio 15 10 15 14 2 2 :: 15 14 15 16 18446744073709551615 10 io_service 15 16 15 26 9 10 io_service 15 27 15 37 12 1 ; 15 37 15 38 18446744073709551615 3 tcp 17 3 17 6 6 2 :: 17 6 17 8 18446744073709551615 8 endpoint 17 8 17 16 13 8 endpoint 17 17 17 25 14 1 ; 17 25 17 26 18446744073709551615 3 tcp 18 3 18 6 6 2 :: 18 6 18 8 18446744073709551615 8 acceptor 18 8 18 16 15 8 acceptor 18 17 18 25 16 1 ; 18 25 18 26 18446744073709551615 4 void 20 3 20 7 18446744073709551615 14 handle_request 20 8 20 22 17 1 ( 20 22 20 23 17 10 shared_ptr 20 23 20 33 18 1 < 20 33 20 34 18446744073709551615 10 Connection 20 34 20 44 5 1 > 20 44 20 45 18446744073709551615 10 connection 20 46 20 56 19 1 ) 20 56 20 57 17 1 { 20 58 20 59 18446744073709551615 4 auto 21 5 21 9 18446744073709551615 11 read_buffer 21 10 21 21 20 1 = 21 22 21 23 18446744073709551615 11 make_shared 21 24 21 35 21 1 < 21 35 21 36 21 5 boost 21 36 21 41 1 2 :: 21 41 21 43 21 4 asio 21 43 21 47 2 2 :: 21 47 21 49 21 9 streambuf 21 49 21 58 22 1 > 21 58 21 59 21 1 ( 21 59 21 60 21 1 ) 21 60 21 61 21 1 ; 21 61 21 62 18446744073709551615 16 async_read_until 22 5 22 21 23 1 ( 22 21 22 22 23 10 connection 22 22 22 32 19 2 -> 22 32 22 34 18446744073709551615 6 socket 22 34 22 40 8 1 , 22 40 22 41 23 1 * 22 42 22 43 24 11 read_buffer 22 43 22 54 20 1 , 22 54 22 55 23 6 "\r\n" 22 56 22 62 18446744073709551615 1 , 22 62 22 63 23 1 [ 23 22 23 23 18446744073709551615 4 this 23 23 23 27 18446744073709551615 1 , 23 27 23 28 18446744073709551615 10 connection 23 29 23 39 19 1 , 23 39 23 40 18446744073709551615 11 read_buffer 23 41 23 52 20 1 ] 23 52 23 53 18446744073709551615 1 ( 23 53 23 54 18446744073709551615 5 const 23 54 23 59 18446744073709551615 5 boost 23 60 23 65 1 2 :: 23 65 23 67 18446744073709551615 6 system 23 67 23 73 25 2 :: 23 73 23 75 18446744073709551615 10 error_code 23 75 23 85 26 1 & 23 86 23 87 18446744073709551615 2 ec 23 87 23 89 27 1 , 23 89 23 90 18446744073709551615 6 size_t 23 91 23 97 28 1 ) 23 97 23 98 18446744073709551615 1 { 23 99 23 100 18446744073709551615 2 if 24 24 24 26 18446744073709551615 1 ( 24 27 24 28 18446744073709551615 1 ! 24 28 24 29 18446744073709551615 2 ec 24 29 24 31 27 1 ) 24 31 24 32 18446744073709551615 1 { 24 33 24 34 18446744073709551615 7 istream 25 26 25 33 29 11 read_stream 25 34 25 45 30 1 ( 25 45 25 46 31 11 read_buffer 25 46 25 57 20 1 . 25 57 25 58 32 3 get 25 58 25 61 32 1 ( 25 61 25 62 32 1 ) 25 62 25 63 32 1 ) 25 63 25 64 31 1 ; 25 64 25 65 18446744073709551615 3 std 26 26 26 29 0 2 :: 26 29 26 31 18446744073709551615 6 string 26 31 26 37 33 7 message 26 38 26 45 34 1 ; 26 45 26 46 18446744073709551615 7 getline 27 26 27 33 35 1 ( 27 33 27 34 35 11 read_stream 27 34 27 45 30 1 , 27 45 27 46 35 7 message 27 47 27 54 34 1 ) 27 54 27 55 35 1 ; 27 55 27 56 18446744073709551615 7 message 28 26 28 33 34 1 . 28 33 28 34 36 8 pop_back 28 34 28 42 36 1 ( 28 42 28 43 36 1 ) 28 43 28 44 36 1 ; 28 44 28 45 18446744073709551615 4 cout 30 26 30 30 37 2 << 30 31 30 33 38 35 "Message from a connected client: " 30 34 30 69 18446744073709551615 2 << 30 70 30 72 38 7 message 30 73 30 80 34 2 << 30 81 30 83 39 4 endl 30 84 30 88 40 1 ; 30 88 30 89 18446744073709551615 2 if 31 26 31 28 18446744073709551615 1 ( 31 29 31 30 18446744073709551615 7 message 31 30 31 37 34 2 == 31 38 31 40 41 6 "exit" 31 41 31 47 18446744073709551615 1 ) 31 47 31 48 18446744073709551615 6 return 32 28 32 34 18446744073709551615 1 ; 32 34 32 35 18446744073709551615 2 if 33 26 33 28 18446744073709551615 1 ( 33 29 33 30 18446744073709551615 7 message 33 30 33 37 34 2 == 33 38 33 40 41 16 "GET / HTTP/1.1" 33 41 33 57 18446744073709551615 1 ) 33 57 33 58 18446744073709551615 1 { 33 59 33 60 18446744073709551615 7 message 34 28 34 35 34 1 = 34 36 34 37 42 17 "HTTP/1.1 200 OK" 34 38 34 55 18446744073709551615 25 "Content-Type: text/html" 35 38 35 63 18446744073709551615 28 "Connection: Closed\r\n\r\n" 36 38 36 66 18446744073709551615 8 "<html>" 37 38 37 46 18446744073709551615 8 "<body>" 38 38 38 46 18446744073709551615 30 "<h1>Dette er hovedsiden</h1>" 39 38 39 68 18446744073709551615 9 "</body>" 40 38 40 47 18446744073709551615 9 "</html>" 41 38 41 47 18446744073709551615 1 ; 41 47 41 48 18446744073709551615 1 } 42 26 42 27 18446744073709551615 4 else 42 28 42 32 18446744073709551615 2 if 42 33 42 35 18446744073709551615 1 ( 42 36 42 37 18446744073709551615 7 message 42 37 42 44 34 2 == 42 45 42 47 41 23 "GET /en_side HTTP/1.1" 42 48 42 71 18446744073709551615 1 ) 42 71 42 72 18446744073709551615 1 { 42 73 42 74 18446744073709551615 7 message 43 28 43 35 34 1 = 43 36 43 37 42 17 "HTTP/1.1 200 OK" 43 38 43 55 18446744073709551615 25 "Content-Type: text/html" 44 38 44 63 18446744073709551615 28 "Connection: Closed\r\n\r\n" 45 38 45 66 18446744073709551615 8 "<html>" 46 38 46 46 18446744073709551615 8 "<body>" 47 38 47 46 18446744073709551615 27 "<h3>Dette er en side</h3>" 48 38 48 65 18446744073709551615 9 "</body>" 49 38 49 47 18446744073709551615 9 "</html>" 50 38 50 47 18446744073709551615 1 ; 50 47 50 48 18446744073709551615 1 } 51 26 51 27 18446744073709551615 4 else 51 28 51 32 18446744073709551615 1 { 51 33 51 34 18446744073709551615 7 message 52 28 52 35 34 1 = 52 36 52 37 42 24 "HTTP/1.1 404 Not Found" 52 38 52 62 18446744073709551615 25 "Content-Type: text/html" 53 38 53 63 18446744073709551615 28 "Connection: Closed\r\n\r\n" 54 38 54 66 18446744073709551615 8 "<html>" 55 38 55 46 18446744073709551615 8 "<body>" 56 38 56 46 18446744073709551615 49 "<h1>Oops! Siden du leter etter finnes ikke</h1>" 57 38 57 87 18446744073709551615 9 "</body>" 58 38 58 47 18446744073709551615 10 "</html> " 59 38 59 48 18446744073709551615 1 ; 59 48 59 49 18446744073709551615 1 } 60 26 60 27 18446744073709551615 4 auto 62 26 62 30 18446744073709551615 12 write_buffer 62 31 62 43 43 1 = 62 44 62 45 18446744073709551615 11 make_shared 62 46 62 57 21 1 < 62 57 62 58 21 5 boost 62 58 62 63 1 2 :: 62 63 62 65 21 4 asio 62 65 62 69 2 2 :: 62 69 62 71 21 9 streambuf 62 71 62 80 22 1 > 62 80 62 81 21 1 ( 62 81 62 82 21 1 ) 62 82 62 83 21 1 ; 62 83 62 84 18446744073709551615 7 ostream 63 26 63 33 44 12 write_stream 63 34 63 46 45 1 ( 63 46 63 47 46 12 write_buffer 63 47 63 59 43 1 . 63 59 63 60 32 3 get 63 60 63 63 32 1 ( 63 63 63 64 32 1 ) 63 64 63 65 32 1 ) 63 65 63 66 46 1 ; 63 66 63 67 18446744073709551615 39 // Add message to be written to client: 65 26 65 65 18446744073709551615 12 write_stream 66 26 66 38 45 2 << 66 39 66 41 38 7 message 66 42 66 49 34 2 << 66 50 66 52 38 6 "\r\n" 66 53 66 59 18446744073709551615 1 ; 66 59 66 60 18446744073709551615 18 // Write to client 68 26 68 44 18446744073709551615 11 async_write 69 26 69 37 47 1 ( 69 37 69 38 47 10 connection 69 38 69 48 19 2 -> 69 48 69 50 18446744073709551615 6 socket 69 50 69 56 8 1 , 69 56 69 57 47 1 * 69 58 69 59 24 12 write_buffer 69 59 69 71 43 1 , 69 71 69 72 47 1 [ 70 38 70 39 18446744073709551615 4 this 70 39 70 43 18446744073709551615 1 , 70 43 70 44 18446744073709551615 10 connection 70 45 70 55 19 1 , 70 55 70 56 18446744073709551615 12 write_buffer 70 57 70 69 43 1 ] 70 69 70 70 18446744073709551615 1 ( 70 70 70 71 18446744073709551615 5 const 70 71 70 76 18446744073709551615 5 boost 70 77 70 82 1 2 :: 70 82 70 84 18446744073709551615 6 system 70 84 70 90 25 2 :: 70 90 70 92 18446744073709551615 10 error_code 70 92 70 102 26 1 & 70 103 70 104 18446744073709551615 2 ec 70 104 70 106 48 1 , 70 106 70 107 18446744073709551615 6 size_t 70 108 70 114 28 1 ) 70 114 70 115 18446744073709551615 1 { 70 116 70 117 18446744073709551615 16 // If not error: 71 40 71 56 18446744073709551615 2 if 72 40 72 42 18446744073709551615 1 ( 72 43 72 44 18446744073709551615 1 ! 72 44 72 45 18446744073709551615 2 ec 72 45 72 47 48 1 ) 72 47 72 48 18446744073709551615 14 handle_request 73 42 73 56 17 1 ( 73 56 73 57 17 10 connection 73 57 73 67 19 1 ) 73 67 73 68 17 1 ; 73 68 73 69 18446744073709551615 1 } 74 38 74 39 18446744073709551615 1 ) 74 39 74 40 47 1 ; 74 40 74 41 18446744073709551615 1 } 75 24 75 25 18446744073709551615 1 } 76 22 76 23 18446744073709551615 1 ) 76 23 76 24 23 1 ; 76 24 76 25 18446744073709551615 1 } 77 3 77 4 18446744073709551615 4 void 79 3 79 7 18446744073709551615 6 accept 79 8 79 14 49 1 ( 79 14 79 15 49 1 ) 79 15 79 16 49 1 { 79 17 79 18 18446744073709551615 78 // The (client) connection is added to the lambda parameter and handle_request 80 5 80 83 18446744073709551615 65 // in order to keep the object alive for as long as it is needed. 81 5 81 70 18446744073709551615 4 auto 82 5 82 9 18446744073709551615 10 connection 82 10 82 20 50 1 = 82 21 82 22 18446744073709551615 11 make_shared 82 23 82 34 21 1 < 82 34 82 35 21 10 Connection 82 35 82 45 5 1 > 82 45 82 46 21 1 ( 82 46 82 47 21 10 io_service 82 47 82 57 12 1 ) 82 57 82 58 21 1 ; 82 58 82 59 18446744073709551615 97 // Accepts a new (client) connection. On connection, immediately start accepting a new connection 84 5 84 102 18446744073709551615 8 acceptor 85 5 85 13 16 1 . 85 13 85 14 51 12 async_accept 85 14 85 26 51 1 ( 85 26 85 27 51 10 connection 85 27 85 37 50 2 -> 85 37 85 39 18446744073709551615 6 socket 85 39 85 45 8 1 , 85 45 85 46 51 1 [ 85 47 85 48 18446744073709551615 4 this 85 48 85 52 18446744073709551615 1 , 85 52 85 53 18446744073709551615 10 connection 85 54 85 64 50 1 ] 85 64 85 65 18446744073709551615 1 ( 85 65 85 66 18446744073709551615 5 const 85 66 85 71 18446744073709551615 5 boost 85 72 85 77 1 2 :: 85 77 85 79 18446744073709551615 6 system 85 79 85 85 25 2 :: 85 85 85 87 18446744073709551615 10 error_code 85 87 85 97 26 1 & 85 98 85 99 18446744073709551615 2 ec 85 99 85 101 52 1 ) 85 101 85 102 18446744073709551615 1 { 85 103 85 104 18446744073709551615 6 accept 86 7 86 13 49 1 ( 86 13 86 14 49 1 ) 86 14 86 15 49 1 ; 86 15 86 16 18446744073709551615 16 // If not error: 87 7 87 23 18446744073709551615 2 if 88 7 88 9 18446744073709551615 1 ( 88 10 88 11 18446744073709551615 1 ! 88 11 88 12 18446744073709551615 2 ec 88 12 88 14 52 1 ) 88 14 88 15 18446744073709551615 1 { 88 16 88 17 18446744073709551615 14 handle_request 89 9 89 23 17 1 ( 89 23 89 24 17 10 connection 89 24 89 34 50 1 ) 89 34 89 35 17 1 ; 89 35 89 36 18446744073709551615 1 } 90 7 90 8 18446744073709551615 1 } 91 5 91 6 18446744073709551615 1 ) 91 6 91 7 51 1 ; 91 7 91 8 18446744073709551615 1 } 92 3 92 4 18446744073709551615 6 public 94 1 94 7 18446744073709551615 1 : 94 7 94 8 18446744073709551615 10 EchoServer 95 3 95 13 4 1 ( 95 13 95 14 4 1 ) 95 14 95 15 4 1 : 95 16 95 17 4 8 endpoint 95 18 95 26 14 1 ( 95 26 95 27 53 3 tcp 95 27 95 30 6 2 :: 95 30 95 32 54 2 v4 95 32 95 34 54 1 ( 95 34 95 35 54 1 ) 95 35 95 36 54 1 , 95 36 95 37 53 4 8080 95 38 95 42 18446744073709551615 1 ) 95 42 95 43 53 1 , 95 43 95 44 4 8 acceptor 95 45 95 53 16 1 ( 95 53 95 54 55 10 io_service 95 54 95 64 12 1 , 95 64 95 65 55 8 endpoint 95 66 95 74 14 1 ) 95 74 95 75 55 1 { 95 76 95 77 18446744073709551615 1 } 95 77 95 78 18446744073709551615 4 void 97 3 97 7 18446744073709551615 5 start 97 8 97 13 56 1 ( 97 13 97 14 56 1 ) 97 14 97 15 56 1 { 97 16 97 17 18446744073709551615 6 accept 98 5 98 11 49 1 ( 98 11 98 12 49 1 ) 98 12 98 13 49 1 ; 98 13 98 14 18446744073709551615 10 io_service 99 5 99 15 12 1 . 99 15 99 16 57 3 run 99 16 99 19 57 1 ( 99 19 99 20 57 1 ) 99 20 99 21 57 1 ; 99 21 99 22 18446744073709551615 1 } 100 3 100 4 18446744073709551615 1 } 101 1 101 2 18446744073709551615 1 ; 101 2 101 3 18446744073709551615 3 int 103 1 103 4 18446744073709551615 4 main 103 5 103 9 58 1 ( 103 9 103 10 58 1 ) 103 10 103 11 58 1 { 103 12 103 13 18446744073709551615 10 EchoServer 104 3 104 13 4 11 echo_server 104 14 104 25 59 1 ; 104 25 104 26 18446744073709551615 4 cout 106 3 106 7 37 2 << 106 8 106 10 38 78 "To connect in terminal: telnet localhost 8080\n. To exit simply type 'exit'." 106 11 106 89 18446744073709551615 2 << 106 90 106 92 39 4 endl 106 93 106 97 40 1 ; 106 97 106 98 18446744073709551615 11 echo_server 108 3 108 14 59 1 . 108 14 108 15 56 5 start 108 15 108 20 56 1 ( 108 20 108 21 56 1 ) 108 21 108 22 56 1 ; 108 22 108 23 18446744073709551615 1 } 109 1 109 2 18446744073709551615 0 0 60 0 0 0 22 0 0 1 2 0 3 std 22 1 2 0 5 boost 22 1 2 0 10 asio:boost 22 1 2 0 13 ip:asio:boost 4 1 2 0 10 EchoServer 4 1 2 0 21 Connection:EchoServer 4 1 2 0 17 tcp:ip:asio:boost 20 1 2 0 24 socket:tcp:ip:asio:boost 6 1 2 0 28 socket:Connection:EchoServer 20 1 2 0 21 io_service:asio:boost 10 1 2 0 89 12:41:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 24 1 2 0 30 basic_stream_socket:asio:boost 6 1 2 0 21 io_service:EchoServer 20 1 2 0 26 endpoint:tcp:ip:asio:boost 6 1 2 0 19 endpoint:EchoServer 20 1 2 0 26 acceptor:tcp:ip:asio:boost 6 1 2 0 19 acceptor:EchoServer 21 1 2 0 25 handle_request:EchoServer 31 1 2 0 18 shared_ptr:__1:std 10 1 2 0 89 20:46:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 9 1 2 0 89 21:10:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 8 1 2 0 19 make_shared:__1:std 20 1 2 0 20 streambuf:asio:boost 8 1 2 0 27 async_read_until:asio:boost 21 1 2 0 28 operator*:shared_ptr:__1:std 22 1 2 0 12 system:boost 4 1 2 0 23 error_code:system:boost 10 1 2 0 89 23:87:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 20 1 2 0 6 size_t 20 1 2 0 15 istream:__1:std 9 1 2 0 89 25:34:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 24 1 2 0 21 basic_istream:__1:std 21 1 2 0 22 get:shared_ptr:__1:std 20 1 2 0 14 string:__1:std 9 1 2 0 89 26:38:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 8 1 2 0 15 getline:__1:std 21 1 2 0 29 pop_back:basic_string:__1:std 9 1 2 0 12 cout:__1:std 8 1 2 0 16 operator:__1:std 21 1 2 0 30 operator:basic_ostream:__1:std 8 1 2 0 12 endl:__1:std 8 1 2 0 18 operator==:__1:std 21 1 2 0 30 operator=:basic_string:__1:std 9 1 2 0 89 62:31:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 20 1 2 0 15 ostream:__1:std 9 1 2 0 89 63:34:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 24 1 2 0 21 basic_ostream:__1:std 8 1 2 0 22 async_write:asio:boost 10 1 2 0 90 70:104:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 21 1 2 0 17 accept:EchoServer 9 1 2 0 89 82:10:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 21 1 2 0 45 async_accept:basic_socket_acceptor:asio:boost 10 1 2 0 89 85:99:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 24 1 2 0 28 basic_endpoint:ip:asio:boost 21 1 2 0 20 v4:tcp:ip:asio:boost 24 1 2 0 32 basic_socket_acceptor:asio:boost 21 1 2 0 16 start:EchoServer 21 1 2 0 25 run:io_context:asio:boost 8 1 2 0 4 main 9 1 2 0 90 104:14:/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 0 0 1 0 0 0 83 /Users/ianevangelista/OneDrive - NTNU/Dataingeniør/3. klasse/C++/Oving6/server.cpp 1599500318